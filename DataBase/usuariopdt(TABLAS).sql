-- ESTADOS
CREATE TABLE ESTADOS (
   id_estado INT PRIMARY KEY,
   nom_estado VARCHAR(50) NOT NULL
) TABLESPACE USERS;

INSERT INTO ESTADOS (id_estado, nom_estado) VALUES (1, 'SIN VALIDAR');
INSERT INTO ESTADOS (id_estado, nom_estado) VALUES (2, 'ACTIVO');
INSERT INTO ESTADOS (id_estado, nom_estado) VALUES (3, 'ELIMINADO');

-- PAISES
CREATE SEQUENCE seq_id_pais START WITH 1 INCREMENT BY 1;

CREATE TABLE PAISES (
   id_pais INT PRIMARY KEY,
   nombre VARCHAR(50) UNIQUE NOT NULL,
   id_estado INT NOT NULL,
   FOREIGN KEY (id_estado) REFERENCES ESTADOS (id_estado)
) TABLESPACE USERS;

CREATE OR REPLACE TRIGGER PAIS_ID_TRIGGER
BEFORE INSERT ON PAISES
FOR EACH ROW
BEGIN
SELECT seq_id_pais.NEXTVAL INTO :NEW.id_pais FROM dual;
END;

-- PROVEEDORES
CREATE SEQUENCE seq_id_proveedor START WITH 1 INCREMENT BY 1;

CREATE TABLE PROVEEDORES (
    id_proveedor INT PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL,
    id_estado INT NOT NULL,
    FOREIGN KEY (id_estado) REFERENCES ESTADOS (id_estado)
) TABLESPACE USERS;

CREATE OR REPLACE TRIGGER PROVEEDOR_ID_TRIGGER
BEFORE INSERT ON PROVEEDORES
FOR EACH ROW
BEGIN
SELECT seq_id_proveedor.NEXTVAL INTO :NEW.id_proveedor FROM dual;
END;

-- PERFILES
CREATE SEQUENCE seq_id_perfil START WITH 1 INCREMENT BY 1;

CREATE TABLE PERFILES (
   id_perfil INT PRIMARY KEY,
   nom_perfil VARCHAR(50) UNIQUE NOT NULL,
   id_estado INT NOT NULL,
   FOREIGN KEY (id_estado) REFERENCES ESTADOS (id_estado)
) TABLESPACE USERS;

CREATE OR REPLACE TRIGGER PERFIL_ID_TRIGGER
BEFORE INSERT ON PERFILES
FOR EACH ROW
BEGIN
SELECT seq_id_perfil.NEXTVAL INTO :NEW.id_perfil FROM dual;
END;

-- USUARIOS
CREATE SEQUENCE seq_id_usuario START WITH 1 INCREMENT BY 1;

CREATE TABLE USUARIOS (
   id_usuario INT PRIMARY KEY,
   cedula VARCHAR2(50) UNIQUE NOT NULL,
   email VARCHAR2(100) UNIQUE NOT NULL,
   telefono VARCHAR2(50) UNIQUE NOT NULL,
   nombre VARCHAR2(50) NOT NULL,
   apellido VARCHAR2(50) NOT NULL,
   nom_user VARCHAR2(50) NOT NULL,
   contrasenia VARCHAR2(50) NOT NULL,
   fec_nac DATE NOT NULL,
   id_perfil INT NOT NULL,
   id_estado INT NOT NULL,
   FOREIGN KEY (id_perfil) REFERENCES PERFILES (id_perfil),
   FOREIGN KEY (id_estado) REFERENCES ESTADOS (id_estado)
) TABLESPACE USERS;

CREATE OR REPLACE TRIGGER USUARIO_ID_TRIGGER
BEFORE INSERT ON USUARIOS
FOR EACH ROW
BEGIN
SELECT seq_id_usuario.NEXTVAL INTO :NEW.id_usuario FROM dual;
END;

-- AUDITORIAS
CREATE SEQUENCE seq_id_auditoria START WITH 1 INCREMENT BY 1;

CREATE TABLE AUDITORIAS (
    id_auditoria INT PRIMARY KEY,
    fec_auditoria DATE NOT NULL,
    operacion VARCHAR2(50) NOT NULL,
    id_usuario INT NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES USUARIOS (id_usuario)
) TABLESPACE USERS;

CREATE OR REPLACE TRIGGER AUDITORIA_ID_TRIGGER
BEFORE INSERT ON AUDITORIAS
FOR EACH ROW
BEGIN
SELECT seq_id_auditoria.NEXTVAL INTO :NEW.id_auditoria FROM dual;
END;

-- TIPOS_EQUIPO
CREATE SEQUENCE seq_id_tipo_equipo START WITH 1 INCREMENT BY 1;

CREATE TABLE TIPOS_EQUIPO (
   id_tipo_equipo INT PRIMARY KEY,
   nom_tipo_equipo VARCHAR2(50) UNIQUE NOT NULL,
   id_estado INT NOT NULL,
   FOREIGN KEY (id_estado) REFERENCES ESTADOS (id_estado)
) TABLESPACE USERS;

CREATE OR REPLACE TRIGGER TIPO_EQUIPO_ID_TRIGGER
BEFORE INSERT ON TIPOS_EQUIPO
FOR EACH ROW
BEGIN
SELECT seq_id_tipo_equipo.NEXTVAL INTO :NEW.id_tipo_equipo FROM dual;
END;

-- TIPOS_INTERVENCION
CREATE SEQUENCE seq_id_tipo_intervencion START WITH 1 INCREMENT BY 1;

CREATE TABLE TIPOS_INTERVENCION (
   id_tipo_intervencion INT PRIMARY KEY,
   nom_tipo_intervencion VARCHAR2(50) UNIQUE NOT NULL,
   id_estado INT NOT NULL,
   FOREIGN KEY (id_estado) REFERENCES ESTADOS (id_estado)
) TABLESPACE USERS;

CREATE OR REPLACE TRIGGER TIPO_INTERVENCION_ID_TRIGGER
BEFORE INSERT ON TIPOS_INTERVENCION
FOR EACH ROW
BEGIN
SELECT seq_id_tipo_intervencion.NEXTVAL INTO :NEW.id_tipo_intervencion FROM dual;
END;

-- SECTORES
CREATE SEQUENCE seq_id_sector START WITH 1 INCREMENT BY 1;

CREATE TABLE SECTORES (
   id_sector INT PRIMARY KEY,
   nom_sector VARCHAR2(50) UNIQUE NOT NULL
) TABLESPACE USERS;

CREATE OR REPLACE TRIGGER SECTOR_ID_TRIGGER
BEFORE INSERT ON SECTORES
FOR EACH ROW
BEGIN
SELECT seq_id_sector.NEXTVAL INTO :NEW.id_sector FROM dual;
END;

-- EQUIPOS
CREATE SEQUENCE seq_id_equipo START WITH 1 INCREMENT BY 1;

CREATE TABLE EQUIPOS (
   id_equipo INT PRIMARY KEY,
   id_pais INT NOT NULL,
   id_tipo_equipo INT NOT NULL,
   id_proveedor INT NOT NULL,
   id_sector INT NOT NULL,
   id_estado INT NOT NULL,
   modelo VARCHAR2(50) NOT NULL,
   marca VARCHAR2(50) NOT NULL,
   nom_equipo VARCHAR2(50) NOT NULL,
   num_serie VARCHAR2(50) NOT NULL,
   fec_adquisicion DATE NOT NULL,
   imagen BLOB NOT NULL,
   garantia DATE NOT NULL,
   FOREIGN KEY (id_estado) REFERENCES ESTADOS (id_estado),
   FOREIGN KEY (id_pais) REFERENCES PAISES (id_pais),
   FOREIGN KEY (id_tipo_equipo) REFERENCES TIPOS_EQUIPO (id_tipo_equipo),
   FOREIGN KEY (id_proveedor) REFERENCES PROVEEDORES (id_proveedor),
   FOREIGN KEY (id_sector) REFERENCES SECTORES (id_sector)
) TABLESPACE USERS;

CREATE OR REPLACE TRIGGER EQUIPO_ID_TRIGGER
BEFORE INSERT ON EQUIPOS
FOR EACH ROW
BEGIN
SELECT seq_id_equipo.NEXTVAL INTO :NEW.id_equipo FROM dual;
END;

-- INTERVENCIONES
CREATE SEQUENCE seq_id_intervencion START WITH 1 INCREMENT BY 1;

CREATE TABLE INTERVENCIONES (
   id_intervencion INT PRIMARY KEY,
   motivo VARCHAR2(100) NOT NULL,
   observacion VARCHAR2(100) NOT NULL,
   fecha_hora DATE NOT NULL,
   id_usuario INT NOT NULL,
   id_equipo INT NOT NULL,
   id_institucion INT NOT NULL,
   id_tipo_intervencion INT NOT NULL,
   FOREIGN KEY (id_usuario) REFERENCES USUARIOS (id_usuario),
   FOREIGN KEY (id_equipo) REFERENCES EQUIPOS (id_equipo),
   FOREIGN KEY (id_institucion) REFERENCES INSTITUCIONES (id_institucion),
   FOREIGN KEY (id_tipo_intervencion) REFERENCES TIPOS_INTERVENCION (id_tipo_intervencion)
) TABLESPACE USERS;

CREATE OR REPLACE TRIGGER INTERVENCION_ID_TRIGGER
BEFORE INSERT ON INTERVENCIONES
FOR EACH ROW
BEGIN
SELECT seq_id_intervencion.NEXTVAL INTO :NEW.id_intervencion FROM dual;
END;

-- INSTITUCIONES
CREATE SEQUENCE seq_id_institucion START WITH 1 INCREMENT BY 1;

CREATE TABLE INSTITUCIONES (
    id_institucion INT PRIMARY KEY,
    nom_institucion VARCHAR(50) UNIQUE NOT NULL
) TABLESPACE USERS;

CREATE OR REPLACE TRIGGER INSTITUCION_ID_TRIGGER
BEFORE INSERT ON INSTITUCIONES
FOR EACH ROW
BEGIN
SELECT seq_id_institucion.NEXTVAL INTO :NEW.id_institucion FROM dual;
END;

-- UBICACIONES
CREATE SEQUENCE seq_id_ubicacion START WITH 1 INCREMENT BY 1;

CREATE TABLE UBICACIONES (
    id_ubicacion INT PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    cama VARCHAR2(50) NOT NULL,
    piso VARCHAR2(50) NOT NULL,
    id_estado INT NOT NULL,
    id_institucion INT NOT NULL,
    id_sector INT NOT NULL,
    FOREIGN KEY (id_estado) REFERENCES ESTADOS (id_estado),
    FOREIGN KEY (id_institucion) REFERENCES INSTITUCIONES (id_institucion),
    FOREIGN KEY (id_sector) REFERENCES SECTORES (id_sector)
) TABLESPACE USERS;

CREATE OR REPLACE TRIGGER UBICACION_ID_TRIGGER
BEFORE INSERT ON UBICACIONES
FOR EACH ROW
BEGIN
SELECT seq_id_ubicacion.NEXTVAL INTO :NEW.id_ubicacion FROM dual;
END;

-- BAJA_UBICACIONES
CREATE TABLE BAJA_UBICACIONES (
   id_ubicacion INT NOT NULL,
   id_usuario INT NOT NULL,
   fec_baja DATE NOT NULL,
   razon_baja VARCHAR2(255) NOT NULL,
   comentarios VARCHAR2(500) NOT NULL,
   institucion INT NOT NULL,
   PRIMARY KEY (id_ubicacion, id_usuario, fec_baja),
   FOREIGN KEY (id_ubicacion) REFERENCES UBICACIONES (id_ubicacion),
   FOREIGN KEY (id_usuario) REFERENCES USUARIOS (id_usuario),
   FOREIGN KEY (institucion) REFERENCES INSTITUCIONES (id_institucion)
) TABLESPACE USERS;

-- BAJA_EQUIPOS
CREATE TABLE BAJA_EQUIPOS (
   id_equipo INT NOT NULL,
   id_usuario INT NOT NULL,
   fec_baja DATE NOT NULL,
   razon_baja VARCHAR2(50) NOT NULL,
   comentarios VARCHAR2(200) NOT NULL,
   institucion INT NOT NULL,
   PRIMARY KEY (id_equipo, id_usuario, fec_baja),
   FOREIGN KEY (id_equipo) REFERENCES EQUIPOS (id_equipo),
   FOREIGN KEY (institucion) REFERENCES INSTITUCIONES (id_institucion)
) TABLESPACE USERS;